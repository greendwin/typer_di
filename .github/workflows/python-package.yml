# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
          - python-version: '3.7.17'
            poetry-version: '1.4.2'
          - python-version: '3.8'
            poetry-version: '1.8.5'
          - python-version: '3.9'
            poetry-version: '1.8.5'
          - python-version: '3.10'
            poetry-version: '1.8.5'
          - python-version: '3.11'
            poetry-version: '1.8.5'
          - python-version: '3.12'
            poetry-version: '1.8.5'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ matrix.poetry-version }}

    - name: Export requirements.txt
      run: |
        poetry export --without-hashes --output requirements.txt

    - name: Cache pip for dependencies
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        path: ~/.cache/pip
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov mypy
        python -m pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pytest

    - name: Typing with `mypy`
      run: |
        mypy
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
